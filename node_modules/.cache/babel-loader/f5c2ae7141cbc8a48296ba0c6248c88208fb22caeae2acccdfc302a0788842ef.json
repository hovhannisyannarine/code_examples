{"ast":null,"code":"var _jsxFileName = \"/var/www/react-app/src/index.js\";\n// import {useState} from \"react\";\n// import './App.css';\n// import ReactDOM from \"react-dom/client\";\n//  function Counter() {\n//      const[counter,setcounter]=useState(0);\n//      const[count,setcount]=useState(0);\n// /*\n//\n//      const decreese = () => {\n//          if (counter > 0) {\n//              setcounter(counter - 1)\n//          }\n//      }\n//\n//      const incress = () => {\n//        // console.log(typeof(+counter));\n//              setcounter(+counter + 1)\n//\n//      }*/\n//      const reset =() => {\n//          setcounter(0)\n//          setcount(0)\n//      }\n//      const changefirstValue = (event) => {\n//          setcounter(event.target.value);\n//      }\n//      const changesecondValue = (event) => {\n//          setcount(event.target.value);\n//      }\n//      return (\n//          <div className=\"counter\">\n//              <h1>React Counter</h1>\n//              {/*first input*/}\n//              <input\n//                  type = \"number\"\n//                  // name=\"counter\"\n//                  onChange={changefirstValue}\n//                  // value={counter}\n//              />\n//              {/*second input*/}\n//              <input\n//                  type = \"number\"\n//                  // name=\"counter\"\n//                  onChange={changesecondValue}\n//                  // value={counter}\n//              />\n//              {/*<button className=\"control__btn\"  onClick={changeValue}>Change</button>*/}\n//              <span className=\"counter__output\">{counter}</span>\n//              <span className=\"counter__output\">{count}</span>\n//              <div className=\"btn__container\">\n//       {/*           <button className=\"control__btn\" onClick={decreese}>-</button>\n//                  <button className=\"control__btn\" onClick={incress}>+</button>*/}\n//\n//                  <button className=\"reset\" onClick={reset}>Reset</button>\n//              </div>\n//          </div>\n//      )\n//  }\n//  // const root = ReactDOM.createRoot(document.getElementById('mydiv'));\n//  // root.render(<Counter/>);\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 5\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","root","createRoot","document","getElementById","render"],"sources":["/var/www/react-app/src/index.js"],"sourcesContent":["// import {useState} from \"react\";\n// import './App.css';\n// import ReactDOM from \"react-dom/client\";\n//  function Counter() {\n//      const[counter,setcounter]=useState(0);\n//      const[count,setcount]=useState(0);\n// /*\n//\n//      const decreese = () => {\n//          if (counter > 0) {\n//              setcounter(counter - 1)\n//          }\n//      }\n//\n//      const incress = () => {\n//        // console.log(typeof(+counter));\n//              setcounter(+counter + 1)\n//\n//      }*/\n//      const reset =() => {\n//          setcounter(0)\n//          setcount(0)\n//      }\n//      const changefirstValue = (event) => {\n//          setcounter(event.target.value);\n//      }\n//      const changesecondValue = (event) => {\n//          setcount(event.target.value);\n//      }\n//      return (\n//          <div className=\"counter\">\n//              <h1>React Counter</h1>\n//              {/*first input*/}\n//              <input\n//                  type = \"number\"\n//                  // name=\"counter\"\n//                  onChange={changefirstValue}\n//                  // value={counter}\n//              />\n//              {/*second input*/}\n//              <input\n//                  type = \"number\"\n//                  // name=\"counter\"\n//                  onChange={changesecondValue}\n//                  // value={counter}\n//              />\n//              {/*<button className=\"control__btn\"  onClick={changeValue}>Change</button>*/}\n//              <span className=\"counter__output\">{counter}</span>\n//              <span className=\"counter__output\">{count}</span>\n//              <div className=\"btn__container\">\n//       {/*           <button className=\"control__btn\" onClick={decreese}>-</button>\n//                  <button className=\"control__btn\" onClick={incress}>+</button>*/}\n//\n//                  <button className=\"reset\" onClick={reset}>Reset</button>\n//              </div>\n//          </div>\n//      )\n//  }\n//  // const root = ReactDOM.createRoot(document.getElementById('mydiv'));\n//  // root.render(<Counter/>);\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA,OAAOC,GAAG,MAAM,OAAO;AACvB;AAAA;AAEA,MAAMC,IAAI,GAAGF,QAAQ,CAACG,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACP,QAAC,KAAK,CAAC,UAAU;EAAA,uBACb,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACQ,CACtB;;AAED;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}