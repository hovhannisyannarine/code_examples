{"ast":null,"code":"var _jsxFileName = \"/var/www/react-app/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  const [counter, setcounter] = useState(0);\n  const [count, setcount] = useState(0);\n  const [updated, setUpdated] = useState(count);\n  const [changed, setchanged] = useState(count);\n  const [answer, setanswer] = useState(0);\n  const [print, setPrint] = useState(false);\n  const [prin, setPrin] = useState(false);\n  const reset = () => {\n    setcounter(0);\n    setcount(0);\n    setUpdated(0);\n    setchanged(0);\n    setanswer(0);\n  };\n  const changefirstValue = event => {\n    setcounter(event.target.value);\n    setPrint(false);\n  };\n  const changesecondValue = event => {\n    setcount(event.target.value);\n    setPrin(false);\n  };\n  const firstClick = () => {\n    // ðŸ‘‡ \"message\" stores input field value\n    setUpdated(+counter);\n    console.log(typeof +counter);\n  };\n  const secondClick = () => {\n    // ðŸ‘‡ \"message\" stores input field value\n    setchanged(+count);\n    console.log(typeof +count);\n  };\n  const sumNumbers = () => {\n    setanswer(+counter + +count);\n  };\n  const minusNumbers = () => {\n    setanswer(+counter - +count);\n  };\n  const bajanumNumbers = () => {\n    setanswer(+counter * +count);\n  };\n  const bazmapaykumNumbers = () => {\n    setanswer(+counter / +count);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 14\n    }, this), print ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", counter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 22\n    }, this) : null, prin ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: getData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: getDa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPrint(true),\n      children: \"Print Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPrin(true),\n      children: \"Print Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n_s(Counter, \"IUXnuzsvNqs7TkQT6e361tPJPQw=\");\n_c = Counter;\nconst root = ReactDOM.createRoot(document.getElementById('mydiv'));\nroot.render( /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 116,\n  columnNumber: 14\n}, this));\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './App';\n//\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>\n// );\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","ReactDOM","Counter","counter","setcounter","count","setcount","updated","setUpdated","changed","setchanged","answer","setanswer","print","setPrint","prin","setPrin","reset","changefirstValue","event","target","value","changesecondValue","firstClick","console","log","secondClick","sumNumbers","minusNumbers","bajanumNumbers","bazmapaykumNumbers","getData","getDa","root","createRoot","document","getElementById","render"],"sources":["/var/www/react-app/src/index.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport './App.css';\nimport ReactDOM from \"react-dom/client\";\n function Counter() {\n\n     const[counter,setcounter]=useState(0);\n     const[count,setcount]=useState(0);\n     const [updated, setUpdated] = useState(count);\n     const [changed, setchanged] = useState(count);\n     const [answer, setanswer] = useState(0);\n     const [print,setPrint]=useState(false)\n     const [prin,setPrin]=useState(false)\n\n\n     const reset =() => {\n         setcounter(0)\n         setcount(0)\n         setUpdated(0)\n         setchanged(0)\n         setanswer(0)\n     }\n     const changefirstValue = (event) => {\n\n         setcounter(event.target.value);\n         setPrint(false)\n\n     }\n     const changesecondValue = (event) => {\n\n         setcount(event.target.value);\n         setPrin(false)\n\n     }\n\n     const firstClick = () => {\n\n         // ðŸ‘‡ \"message\" stores input field value\n         setUpdated(+counter);\n         console.log(typeof (+counter));\n\n     };\n     const secondClick = () => {\n         // ðŸ‘‡ \"message\" stores input field value\n         setchanged(+count);\n         console.log(typeof (+count));\n\n     };\n     const sumNumbers = () => {\n         setanswer((+counter) + (+count))\n     }\n     const minusNumbers = () => {\n         setanswer((+counter) - (+count))\n\n     }\n     const bajanumNumbers = () => {\n         setanswer((+counter) * (+count))\n     }\n     const bazmapaykumNumbers = () => {\n         setanswer((+counter) / (+count))\n     }\n     return (\n         <div className=\"counter\">\n             <h1>React Counter</h1>\n       {/*      first input\n             <input\n                 type = \"number\"\n                 // name=\"counter\"\n                 // onChange={changefirstValue}\n                 // value={counter}\n             />\n             second input\n             <input\n                 type = \"number\"\n                 // name=\"counter\"\n                 // onChange={changesecondValue}\n                 // value={counter}\n             />\n             <span className=\"counter__output\">{counter }{' '}{ count}</span>\n             <h2>Number one: {updated} <br/> Number two: {changed}</h2>\n               <h2>{answer}</h2>\n\n             <span className=\"counter__output\">{count}</span>\n             <div className=\"btn__container\">\n                 <button className=\"control__btn\"  onClick={firstClick}>get first number</button>\n                 <button className=\"control__btn\"  onClick={secondClick}>get second number</button>\n                 <button className=\"control__btn\"  onClick={sumNumbers}>+</button>\n                 <button className=\"control__btn\"  onClick={minusNumbers}>-</button>\n                 <button className=\"control__btn\"  onClick={bajanumNumbers}>*</button>\n                 <button className=\"control__btn\"  onClick={bazmapaykumNumbers}>/</button>\n\n                            <button className=\"control__btn\" onClick={decreese}>-</button>\n                 <button className=\"control__btn\" onClick={incress}>+</button>\n\n                 <button className=\"reset\" onClick={reset}>Reset</button>\n             </div>*/}\n\n             {\n                 print?\n                     <h1> {counter}</h1>\n                     :null\n             }\n             {\n                 prin?\n                     <h1> {count}</h1>\n                     :null\n             }\n             <input type=\"text\" onChange={getData} />\n             <input type=\"text\" onChange={getDa} />\n             <button onClick={()=>setPrint(true)} >Print Data</button>\n             <button onClick={()=>setPrin(true)} >Print Data</button>\n\n         </div>\n     )\n }\n const root = ReactDOM.createRoot(document.getElementById('mydiv'));\n root.render(<Counter/>);\n\n// import React from 'react';\n// import ReactDOM from 'react-dom/client';\n// import App from './App';\n//\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//     <React.StrictMode>\n//         <App />\n//     </React.StrictMode>\n// );\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}