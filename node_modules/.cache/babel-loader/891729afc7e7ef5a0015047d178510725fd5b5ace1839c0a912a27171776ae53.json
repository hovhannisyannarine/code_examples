{"ast":null,"code":"var _jsxFileName = \"/var/www/react-app/src/index.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from '../../my-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport '.app.css';\nimport { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\n/*function Counter() {\n    const [count, setCount] = useState(0);\n    return (\n        <>\n            <p>Count: {count}</p>\n            <button onClick={() => setCount((c) => c + 1)}>+</button>\n            <button onClick={() => setCount((c) => c - 1)}>-</button>\n        </>\n    );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('mydiv'));\nroot.render(<Counter />);*/\n\n////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Second() {\n  _s();\n  const [counter, setCounter] = useState(0);\n\n  //increase counter\n  const increase = () => {\n    setCounter(count => count + 1);\n  };\n\n  //decrease counter\n  const decrease = () => {\n    setCounter(count => count - 1);\n  };\n\n  //reset counter\n  const reset = () => {\n    setCounter(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"counter__output\",\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control__btn\",\n        onClick: increase,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"control__btn\",\n        onClick: decrease,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Second, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n_c = Second;\nconst answer = ReactDOM.createRoot(document.getElementById('root'));\nanswer.render( /*#__PURE__*/_jsxDEV(Second, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 70,\n  columnNumber: 15\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Second\");","map":{"version":3,"names":["useState","ReactDOM","Second","counter","setCounter","increase","count","decrease","reset","answer","createRoot","document","getElementById","render"],"sources":["/var/www/react-app/src/index.js"],"sourcesContent":["/*import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from '../../my-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport '.app.css';\nimport { useState} from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\n/*function Counter() {\n    const [count, setCount] = useState(0);\n    return (\n        <>\n            <p>Count: {count}</p>\n            <button onClick={() => setCount((c) => c + 1)}>+</button>\n            <button onClick={() => setCount((c) => c - 1)}>-</button>\n        </>\n    );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('mydiv'));\nroot.render(<Counter />);*/\n\n\n////\n\n function Second() {\n    const [counter, setCounter] = useState(0);\n\n    //increase counter\n    const increase = () => {\n        setCounter(count => count + 1);\n    };\n\n    //decrease counter\n    const decrease = () => {\n        setCounter(count => count - 1);\n    };\n\n    //reset counter\n    const reset = () =>{\n        setCounter(0)\n    }\n\n    return (\n        <div className=\"counter\">\n            <h1>React Counter</h1>\n            <span className=\"counter__output\">{counter}</span>\n            <div className=\"btn__container\">\n                <button className=\"control__btn\" onClick={increase}>+</button>\n                <button className=\"control__btn\" onClick={decrease}>-</button>\n                <button className=\"reset\" onClick={reset}>Reset</button>\n            </div>\n        </div>\n    );\n}\nconst answer = ReactDOM.createRoot(document.getElementById('root'));\nanswer.render(<Second />);"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,UAAU;AACjB,SAASA,QAAQ,QAAO,OAAO;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAAA;AAEC,SAASC,MAAM,GAAG;EAAA;EACf,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;;EAEzC;EACA,MAAMK,QAAQ,GAAG,MAAM;IACnBD,UAAU,CAACE,KAAK,IAAIA,KAAK,GAAG,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAM;IACnBH,UAAU,CAACE,KAAK,IAAIA,KAAK,GAAG,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAME,KAAK,GAAG,MAAK;IACfJ,UAAU,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,wBACpB;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eACtB;MAAM,SAAS,EAAC,iBAAiB;MAAA,UAAED;IAAO;MAAA;MAAA;MAAA;IAAA,QAAQ,eAClD;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAQ,SAAS,EAAC,cAAc;QAAC,OAAO,EAAEE,QAAS;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9D;QAAQ,SAAS,EAAC,cAAc;QAAC,OAAO,EAAEE,QAAS;QAAA,UAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QAAS,eAC9D;QAAQ,SAAS,EAAC,OAAO;QAAC,OAAO,EAAEC,KAAM;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA7BSN,MAAM;AAAA,KAANA,MAAM;AA8BhB,MAAMO,MAAM,GAAGR,QAAQ,CAACS,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACnEH,MAAM,CAACI,MAAM,eAAC,QAAC,MAAM;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}