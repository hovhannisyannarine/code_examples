{"ast":null,"code":"var _jsxFileName = \"/var/www/react-app/src/index.js\",\n  _s = $RefreshSig$();\n/*import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from '../../my-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    setTimeout(() => {\n      setCount(count => count + 1);\n    }, 1000);\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\"I have rendered \", count, \" times!\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}\n_s(Timer, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n_c = Timer;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Timer, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useState","useEffect","ReactDOM","Timer","count","setCount","setTimeout","root","createRoot","document","getElementById","render"],"sources":["/var/www/react-app/src/index.js"],"sourcesContent":["/*import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from '../../my-app/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);*/\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nimport { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nfunction Timer() {\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setCount((count) => count + 1);\n        }, 1000);\n    });\n\n    return <h1>I have rendered {count} times!</h1>;\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<Timer />);\n\n              "],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AAAC;AAExC,SAASC,KAAK,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACZK,UAAU,CAAC,MAAM;MACbD,QAAQ,CAAED,KAAK,IAAKA,KAAK,GAAG,CAAC,CAAC;IAClC,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC,CAAC;EAEF,oBAAO;IAAA,WAAI,kBAAgB,EAACA,KAAK,EAAC,SAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAAK;AAClD;AAAC,GAVQD,KAAK;AAAA,KAALA,KAAK;AAYd,MAAMI,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eAAC,QAAC,KAAK;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}